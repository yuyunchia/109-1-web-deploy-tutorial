{"version":3,"sources":["problems/index.js","problems sync /^/.*$","logo.svg","components/Header.js","components/Grid_1x1.js","components/Grid_9x9.js","components/ScreenInputKeyBoard.js","containers/Sudoku.js","App.js","reportWebVitals.js","index.js"],"names":["problemList","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","useStyles","makeStyles","theme","headerHolder","fontSize","margin","color","title","buttonHolder","display","justifyContent","formControl","spacing","minWidth","button","maxWidth","Header","props","classes","React","useState","problem","setPreblem","p","MenuItem","value","className","FormControl","variant","InputLabel","Select","labelId","onChange","event","target","loadProblem","String","label","autoWidth","Button","size","onClick","handleAutoComplete","handleResetGame","Grid_1x1","gridStyle","selectedGrid","row_index","col_index","conflicted","fixed","backgroundColor","borderLeft","borderRight","borderTop","borderBottom","tabindex","style","handle_grid_1x1_click","Grid_9x9","checkConflicted","conflicts","undefined","find","c","this","col_offset","row_offset","fixedValue","Component","inputKeyboard","flexDirection","border","grid","alignItems","width","height","maxHeight","ScreenInputKeyBoard","numbers","Array","num","handleScreenKeyboardInput","Sudoku","state","content","setState","handleKeyDownEvent","gridValues","keyCode","findConflicts","key","new_gridValues","checkCompleted","completeFlag","setTimeout","gameBoardBorderStyle","rt","i","push","j","target_row_index","Math","floor","target_col_index","gridValue","length","candidateList","candidates","k","isValid","tartgetIndex","row","col","search","index","slice","property","componentDidMount","window","addEventListener","name","a","loading","require","array","fxProps","count","interval","canvasWidth","innerWidth","canvasHeight","innerHeight","colors","calc","x","random","y","type","extractArray","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dd49aac.chunk.js","sourcesContent":["export const problemList = [\r\n    \"test01.json\",\r\n    \"sample01.json\",\r\n    \"sample02.json\",\r\n    \"sample03.json\",\r\n]","var map = {\n\t\"./\": 29,\n\t\"./index\": 29,\n\t\"./index.js\": 29,\n\t\"./sample01\": 46,\n\t\"./sample01.json\": 46,\n\t\"./sample02\": 47,\n\t\"./sample02.json\": 47,\n\t\"./sample03\": 48,\n\t\"./sample03.json\": 48,\n\t\"./test01\": 49,\n\t\"./test01.json\": 49\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 88;","export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    headerHolder: {\r\n        fontSize: \"5vh\",\r\n        margin: \"3vh\",\r\n        color: \"#666\"\r\n    },\r\n    title: {\r\n        fontSize: \"6vh\",\r\n    },\r\n    buttonHolder: {\r\n        display: \"flex\",\r\n        // width: \"50vw\",\r\n        justifyContent: \"space-around\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 100,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        maxWidth: \"30vw\",\r\n    }\r\n}));\r\n\r\nexport default function Header(props) {\r\n    const classes = useStyles();\r\n    const [problem, setPreblem] = React.useState('');\r\n\r\n    const handleChange = (event) => {\r\n        setPreblem(event.target.value);\r\n        props.loadProblem(String(event.target.value));\r\n    };\r\n\r\n    const problemList = props.problemList.map(p => <MenuItem value={p}>{p}</MenuItem>)\r\n    return (\r\n        <div className={classes.headerHolder}>\r\n            <div className={classes.title}><b>My Sudoku</b></div>\r\n            <div className={classes.buttonHolder}>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">problem</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        value={problem}\r\n                        onChange={handleChange}\r\n                        label=\"problem\"\r\n                        autoWidth\r\n                    >\r\n                        <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                        </MenuItem>\r\n                        {problemList}\r\n                    </Select>\r\n                </FormControl>\r\n                <Button className={classes.button} variant=\"contained\" size=\"small\" onClick={props.handleAutoComplete}>\r\n                    Auto Complete\r\n                </Button>\r\n                <Button className={classes.button} variant=\"contained\" size=\"small\" onClick={props.handleResetGame}>\r\n                    Reset Game\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport \"./Grid.css\"\r\n\r\nexport default function Grid_1x1(props) {\r\n    const gridStyle = {\r\n        color: (props.selectedGrid.row_index === props.row_index && props.selectedGrid.col_index === props.col_index) || props.conflicted ? \"#FFF\" : props.fixed ? \"#666\" : \"#6CC\",\r\n        backgroundColor: props.selectedGrid.row_index === props.row_index && props.selectedGrid.col_index === props.col_index ? \"#333\" : props.conflicted ? \"#E77\" : \"#FFF\",\r\n        borderLeft: props.col_index % 3 === 0 ? \"1.5px solid transparent\" : \"1.5px solid #999\",\r\n        borderRight: props.col_index % 3 === 2 ? \"1.5px solid transparent\" : \"1.5px solid #999\",\r\n        borderTop: props.row_index % 3 === 0 ? \"1.5px solid transparent\" : \"1.5px solid #999\",\r\n        borderBottom: props.row_index % 3 === 2 ? \"1.5px solid transparent\" : \"1.5px solid #999\",\r\n    };\r\n    return (\r\n        <div className=\"grid_1x1\" id={`grid-${props.row_index}*${props.col_index}`} tabindex=\"1\" style={gridStyle} onClick={() => props.handle_grid_1x1_click(props.row_index, props.col_index)}>\r\n            { props.value === \"0\" ? \"\" : props.value}\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport Grid_1x1 from '../components/Grid_1x1';\r\n\r\nclass Grid_9x9 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    checkConflicted = (conflicts, row_index, col_index) => {\r\n        return conflicts.find(c => c.row_index === row_index + 0 && c.col_index === col_index + 0) !== undefined;\r\n    }\r\n\r\n    render() {\r\n        let gridStyle = {\r\n            borderLeft: this.props.col_offset === 0 ? \"\" : \"4px solid #666\",\r\n            borderRight: this.props.col_offset === 6 ? \"\" : \"4px solid #666\",\r\n            borderTop: this.props.row_offset === 0 ? \"\" : \"4px solid #666\",\r\n            borderBottom: this.props.row_offset === 6 ? \"\" : \"4px solid #666\",\r\n            backgroundColor: \"#999\"\r\n        };\r\n\r\n        return (\r\n            <div className=\"grid_9x9\" style={gridStyle}>\r\n                <div className=\"row\">\r\n                    <Grid_1x1\r\n                        value={this.props.value[0]}\r\n                        fixed={this.props.fixedValue[0] !== \"0\"}\r\n                        row_index={this.props.row_offset + 0}\r\n                        col_index={this.props.col_offset + 0}\r\n                        handle_grid_1x1_click={this.props.handle_grid_1x1_click}\r\n                        selectedGrid={this.props.selectedGrid}\r\n                        conflicted={this.checkConflicted(this.props.conflicts, this.props.row_offset + 0, this.props.col_offset + 0)} />\r\n\r\n                    <Grid_1x1\r\n                        value={this.props.value[1]}\r\n                        fixed={this.props.fixedValue[1] !== \"0\"}\r\n                        row_index={this.props.row_offset + 0}\r\n                        col_index={this.props.col_offset + 1}\r\n                        handle_grid_1x1_click={this.props.handle_grid_1x1_click}\r\n                        selectedGrid={this.props.selectedGrid}\r\n                        conflicted={this.checkConflicted(this.props.conflicts, this.props.row_offset + 0, this.props.col_offset + 1)} />\r\n\r\n                    <Grid_1x1\r\n                        value={this.props.value[2]}\r\n                        fixed={this.props.fixedValue[2] !== \"0\"}\r\n                        row_index={this.props.row_offset + 0}\r\n                        col_index={this.props.col_offset + 2}\r\n                        handle_grid_1x1_click={this.props.handle_grid_1x1_click}\r\n                        selectedGrid={this.props.selectedGrid}\r\n                        conflicted={this.checkConflicted(this.props.conflicts, this.props.row_offset + 0, this.props.col_offset + 2)} />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Grid_1x1\r\n                        value={this.props.value[3]}\r\n                        fixed={this.props.fixedValue[3] !== \"0\"}\r\n                        row_index={this.props.row_offset + 1}\r\n                        col_index={this.props.col_offset + 0}\r\n                        handle_grid_1x1_click={this.props.handle_grid_1x1_click}\r\n                        selectedGrid={this.props.selectedGrid}\r\n                        conflicted={this.checkConflicted(this.props.conflicts, this.props.row_offset + 1, this.props.col_offset + 0)} />\r\n\r\n                    <Grid_1x1\r\n                        value={this.props.value[4]}\r\n                        fixed={this.props.fixedValue[4] !== \"0\"}\r\n                        row_index={this.props.row_offset + 1}\r\n                        col_index={this.props.col_offset + 1}\r\n                        handle_grid_1x1_click={this.props.handle_grid_1x1_click}\r\n                        selectedGrid={this.props.selectedGrid}\r\n                        conflicted={this.checkConflicted(this.props.conflicts, this.props.row_offset + 1, this.props.col_offset + 1)} />\r\n\r\n                    <Grid_1x1\r\n                        value={this.props.value[5]}\r\n                        fixed={this.props.fixedValue[5] !== \"0\"}\r\n                        row_index={this.props.row_offset + 1}\r\n                        col_index={this.props.col_offset + 2}\r\n                        handle_grid_1x1_click={this.props.handle_grid_1x1_click}\r\n                        selectedGrid={this.props.selectedGrid}\r\n                        conflicted={this.checkConflicted(this.props.conflicts, this.props.row_offset + 1, this.props.col_offset + 2)} />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Grid_1x1\r\n                        value={this.props.value[6]}\r\n                        fixed={this.props.fixedValue[6] !== \"0\"}\r\n                        row_index={this.props.row_offset + 2}\r\n                        col_index={this.props.col_offset + 0}\r\n                        handle_grid_1x1_click={this.props.handle_grid_1x1_click}\r\n                        selectedGrid={this.props.selectedGrid}\r\n                        conflicted={this.checkConflicted(this.props.conflicts, this.props.row_offset + 2, this.props.col_offset + 0)} />\r\n\r\n                    <Grid_1x1\r\n                        value={this.props.value[7]}\r\n                        fixed={this.props.fixedValue[7] !== \"0\"}\r\n                        row_index={this.props.row_offset + 2}\r\n                        col_index={this.props.col_offset + 1}\r\n                        handle_grid_1x1_click={this.props.handle_grid_1x1_click}\r\n                        selectedGrid={this.props.selectedGrid}\r\n                        conflicted={this.checkConflicted(this.props.conflicts, this.props.row_offset + 2, this.props.col_offset + 1)} />\r\n\r\n                    <Grid_1x1\r\n                        value={this.props.value[8]}\r\n                        fixed={this.props.fixedValue[8] !== \"0\"}\r\n                        row_index={this.props.row_offset + 2}\r\n                        col_index={this.props.col_offset + 2}\r\n                        handle_grid_1x1_click={this.props.handle_grid_1x1_click}\r\n                        selectedGrid={this.props.selectedGrid}\r\n                        conflicted={this.checkConflicted(this.props.conflicts, this.props.row_offset + 2, this.props.col_offset + 2)} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Grid_9x9;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputKeyboard: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        margin: \"2vh\",\r\n        border: \"4px solid #999\"\r\n    },\r\n    grid: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: \"6vh\",\r\n        height: \"6vh\",\r\n        maxWidth: \"8vw\",\r\n        maxHeight: \"8vw\",\r\n        border: \"2px solid #999\",\r\n        fontSize: \"min(6vh, 6vw)\",\r\n        color: \"#666\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#999\",\r\n            color: \"#fff\"\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function ScreenInputKeyBoard(props) {\r\n    const classes = useStyles();\r\n    const numbers = [...Array(10).keys()];\r\n\r\n    return (\r\n        <div className={classes.inputKeyboard} >\r\n            {numbers.map(num => (<div id={`keyboard-input-${num}`} className={classes.grid} onClick={() => props.handleScreenKeyboardInput(num)}>{num === 0 ? \"\" : num}</div>))}\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport ReactLoading from \"react-loading\";\r\nimport { Fireworks } from 'fireworks/lib/react'\r\n\r\nimport \"./Sudoku.css\"\r\nimport Header from '../components/Header';\r\nimport Grid_9x9 from '../components/Grid_9x9';\r\nimport ScreenInputKeyBoard from '../components/ScreenInputKeyBoard'\r\nimport { problemList } from \"../problems\"\r\n\r\nclass Sudoku extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true, // Return loading effect if this is true.\r\n            problem: null, // Stores problem data. See \"../problems/\" for more information.This is the origin problem and should not be modified. This is used to distinguish the fixed numbers from the editable values\r\n            gridValues: null,  // A 2D array storing the current values on the gameboard. You should update this when updating the game board values.\r\n            selectedGrid: { row_index: -1, col_index: -1 }, // This objecct store the current selected grid position. Update this when a new grid is selected.\r\n            gameBoardBorderStyle: \"8px solid #000\", // This stores the gameBoarderStyle and is passed to the gameboard div. Update this to have a error effect (Bonus #2).\r\n            completeFlag: false, // Set this flag to true when you wnat to set off the firework effect.\r\n            conflicts: [{ row_index: -1, col_index: -1 }] // The array stores all the conflicts positions triggered at this moment. Update the array whenever you needed.\r\n        }\r\n    }\r\n\r\n    handle_grid_1x1_click = (row_index, col_index) => {\r\n        if (this.state.problem.content[row_index][col_index] === \"0\") {\r\n            this.setState({ selectedGrid: { row_index: row_index, col_index: col_index } });\r\n        }\r\n    }\r\n\r\n    handleKeyDownEvent = (e) => {\r\n        if (this.state.gridValues !== null && this.state.selectedGrid.row_index !== -1 && this.state.selectedGrid.col_index !== -1 && ((e.keyCode >= 48 && e.keyCode <= 57) || (e.keyCode >= 96 && e.keyCode <= 105) || e.code === \"Space\")) {\r\n            if (this.state.problem.content[this.state.selectedGrid.row_index][this.state.selectedGrid.col_index] === \"0\") {\r\n                if (this.findConflicts(this.state.selectedGrid.row_index, this.state.selectedGrid.col_index, e.key === \" \" ? \"0\" : e.key)) {\r\n                    let new_gridValues = this.state.gridValues;\r\n                    new_gridValues[this.state.selectedGrid.row_index][this.state.selectedGrid.col_index] = e.key === \" \" ? \"0\" : e.key;\r\n                    this.setState({ gridValues: new_gridValues })\r\n                    if (this.checkCompleted(new_gridValues)) {\r\n                        this.setState({ completeFlag: true });\r\n                        setTimeout(() => { this.setState({ completeFlag: false }); }, 2500);\r\n                    };\r\n                } else {\r\n                    this.setState({ gameBoardBorderStyle: \"8px solid #E77\" });\r\n                    setTimeout(() => { this.setState({ gameBoardBorderStyle: \"8px solid #333\" }); }, 1000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleScreenKeyboardInput = (num) => {\r\n        this.handleKeyDownEvent({ key: String(num), keyCode: num + 48 });\r\n    }\r\n\r\n    findConflicts = (row_index, col_index, value) => {\r\n        let rt = true;\r\n        let conflicts = [];\r\n        if (value === \"0\")\r\n            return true;\r\n        for (let i = 0; i < 9; ++i) {\r\n            if (i !== row_index && this.state.gridValues[i][col_index] === value) {\r\n                rt = false;\r\n                conflicts.push({ row_index: i, col_index: col_index });\r\n            }\r\n            if (i !== col_index && this.state.gridValues[row_index][i] === value) {\r\n                rt = false;\r\n                conflicts.push({ row_index: row_index, col_index: i });\r\n            }\r\n            for (let j = 0; j < 9; ++j) {\r\n                const target_row_index = Math.floor(row_index / 3) * 3 + Math.floor(j / 3);\r\n                const target_col_index = Math.floor(col_index / 3) * 3 + j % 3;\r\n                if (target_row_index !== row_index && target_col_index !== col_index && this.state.gridValues[target_row_index][target_col_index] === value) {\r\n                    rt = false;\r\n                    conflicts.push({ row_index: target_row_index, col_index: target_col_index });\r\n                }\r\n            }\r\n        }\r\n        this.setState({ conflicts: conflicts });\r\n        setTimeout(() => { this.setState({ conflicts: [] }); }, 1000);\r\n        return rt;\r\n    }\r\n\r\n    checkCompleted = (gridValue) => {\r\n        for (let i = 0; i < gridValue.length; ++i) {\r\n            for (let j = 0; j < gridValue[i].length; ++j) {\r\n                if (gridValue[i][j] === \"0\") {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleResetGame = () => {\r\n        if (this.state.problem !== null && this.state.problem !== null) {\r\n            this.setState({ gridValues: this.state.problem.content });\r\n        }\r\n    }\r\n\r\n    handleAutoComplete = () => {\r\n        if (this.state.gridValues === null) return;\r\n        let candidateList = [];\r\n        for (let i = 0; i < 9; ++i) {\r\n            for (let j = 0; j < 9; ++j) {\r\n                if (this.state.problem.content[i][j] === \"0\") {\r\n                    let candidates = [];\r\n                    for (let k = 1; k < 10; ++k) {\r\n                        if (this.isValid(this.state.gridValues, i, j, String(k))) {\r\n                            candidates.push(String(k));\r\n                        }\r\n                    }\r\n                    candidateList.push({ tartgetIndex: { row: i, col: j }, candidates: candidates });\r\n                }\r\n            }\r\n        }\r\n        if(candidateList.length === 0) return\r\n        this.search(0, candidateList, this.state.gridValues);\r\n    }\r\n\r\n    search = (index, candidateList, gridValues) => {\r\n        let new_gridValues = [];\r\n        for (let i = 0; i < gridValues.length; i++)\r\n            new_gridValues[i] = gridValues[i].slice();\r\n\r\n        for (const property in candidateList[index].candidates) {\r\n            if (this.isValid(new_gridValues, candidateList[index].tartgetIndex.row, candidateList[index].tartgetIndex.col, candidateList[index].candidates[property])) {\r\n                new_gridValues[candidateList[index].tartgetIndex.row][candidateList[index].tartgetIndex.col] = candidateList[index].candidates[property];\r\n                if (index === candidateList.length - 1) {\r\n                    this.setState({ gridValues: new_gridValues });\r\n                    if (this.checkCompleted(new_gridValues)) {\r\n                        this.setState({ completeFlag: true });\r\n                        setTimeout(() => { this.setState({ completeFlag: false }); }, 2500);\r\n                    };\r\n                    return true;\r\n                } else if (this.search(index + 1, candidateList, new_gridValues)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isValid = (gridValues, row_index, col_index, value) => {\r\n        for (let i = 0; i < 9; ++i) {\r\n            if (i !== row_index && gridValues[i][col_index] === value) {\r\n                return false;\r\n            }\r\n            if (i !== col_index && gridValues[row_index][i] === value) {\r\n                return false;\r\n            }\r\n            for (let j = 0; j < 9; ++j) {\r\n                const target_row_index = Math.floor(row_index / 3) * 3 + Math.floor(j / 3);\r\n                const target_col_index = Math.floor(col_index / 3) * 3 + j % 3;\r\n                if (target_row_index !== row_index && target_col_index !== col_index && this.state.gridValues[target_row_index][target_col_index] === value) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.addEventListener('keydown', this.handleKeyDownEvent);\r\n    }\r\n\r\n    loadProblem = async (name) => {\r\n        this.setState({\r\n            loading: true,\r\n            problem: null,\r\n            gridValues: null,\r\n            selectedGrid: { row_index: -1, col_index: -1 }\r\n        });\r\n\r\n        const problem = await require(`../problems/${name}`)\r\n        if (problem.content !== undefined) {\r\n            let gridValues = [];\r\n            for (let i = 0; i < problem.content.length; i++)\r\n                gridValues[i] = problem.content[i].slice();\r\n            this.setState({ problem: problem, gridValues: gridValues, loading: false });\r\n        }\r\n    }\r\n\r\n    extractArray(array, col_index, row_index) {\r\n        let rt = []\r\n        for (let i = row_index; i < row_index + 3; i++) {\r\n            for (let j = col_index; j < col_index + 3; j++) {\r\n                rt.push(array[i][j])\r\n            }\r\n        }\r\n        return rt;\r\n    }\r\n\r\n    render() {\r\n        const fxProps = {\r\n            count: 3,\r\n            interval: 700,\r\n            canvasWidth: window.innerWidth,\r\n            canvasHeight: window.innerHeight,\r\n            colors: ['#cc3333', '#81C784'],\r\n            calc: (props, i) => ({\r\n                ...props,\r\n                x: (i + 1) * (window.innerWidth / 3) * Math.random(),\r\n                y: window.innerHeight * Math.random()\r\n            })\r\n        }\r\n        return (\r\n            <>\r\n                <Header\r\n                    problemList={problemList}\r\n                    loadProblem={this.loadProblem}\r\n                    handleResetGame={this.handleResetGame}\r\n                    handleAutoComplete={this.handleAutoComplete} />\r\n\r\n                {this.state.loading ? (<ReactLoading type={\"bars\"} color={\"#777\"} height={\"40vh\"} width={\"40vh\"} />) : (\r\n                    <div id=\"game-board\" className=\"gameBoard\" style={{ border: this.state.gameBoardBorderStyle }}>\r\n                        <div className=\"row\">\r\n                            <Grid_9x9 row_offset={0} col_offset={0}\r\n                                handle_grid_1x1_click={this.handle_grid_1x1_click}\r\n                                value={this.extractArray(this.state.gridValues, 0, 0)}\r\n                                fixedValue={this.extractArray(this.state.problem.content, 0, 0)}\r\n                                selectedGrid={this.state.selectedGrid}\r\n                                conflicts={this.state.conflicts} />\r\n\r\n                            <Grid_9x9 row_offset={0} col_offset={3}\r\n                                handle_grid_1x1_click={this.handle_grid_1x1_click}\r\n                                value={this.extractArray(this.state.gridValues, 3, 0)}\r\n                                fixedValue={this.extractArray(this.state.problem.content, 3, 0)}\r\n                                selectedGrid={this.state.selectedGrid}\r\n                                conflicts={this.state.conflicts} />\r\n\r\n                            <Grid_9x9 row_offset={0} col_offset={6}\r\n                                handle_grid_1x1_click={this.handle_grid_1x1_click}\r\n                                value={this.extractArray(this.state.gridValues, 6, 0)}\r\n                                fixedValue={this.extractArray(this.state.problem.content, 6, 0)}\r\n                                selectedGrid={this.state.selectedGrid}\r\n                                conflicts={this.state.conflicts} />\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <Grid_9x9 row_offset={3} col_offset={0}\r\n                                handle_grid_1x1_click={this.handle_grid_1x1_click}\r\n                                value={this.extractArray(this.state.gridValues, 0, 3)}\r\n                                fixedValue={this.extractArray(this.state.problem.content, 0, 3)}\r\n                                selectedGrid={this.state.selectedGrid}\r\n                                conflicts={this.state.conflicts} />\r\n\r\n                            <Grid_9x9 row_offset={3} col_offset={3}\r\n                                handle_grid_1x1_click={this.handle_grid_1x1_click}\r\n                                value={this.extractArray(this.state.gridValues, 3, 3)}\r\n                                fixedValue={this.extractArray(this.state.problem.content, 3, 3)}\r\n                                selectedGrid={this.state.selectedGrid}\r\n                                conflicts={this.state.conflicts} />\r\n\r\n                            <Grid_9x9 row_offset={3} col_offset={6}\r\n                                handle_grid_1x1_click={this.handle_grid_1x1_click}\r\n                                value={this.extractArray(this.state.gridValues, 6, 3)}\r\n                                fixedValue={this.extractArray(this.state.problem.content, 6, 3)}\r\n                                selectedGrid={this.state.selectedGrid}\r\n                                conflicts={this.state.conflicts} />\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <Grid_9x9 row_offset={6} col_offset={0}\r\n                                handle_grid_1x1_click={this.handle_grid_1x1_click}\r\n                                value={this.extractArray(this.state.gridValues, 0, 6)}\r\n                                fixedValue={this.extractArray(this.state.problem.content, 0, 6)}\r\n                                selectedGrid={this.state.selectedGrid}\r\n                                conflicts={this.state.conflicts} />\r\n\r\n                            <Grid_9x9 row_offset={6} col_offset={3}\r\n                                handle_grid_1x1_click={this.handle_grid_1x1_click}\r\n                                value={this.extractArray(this.state.gridValues, 3, 6)}\r\n                                fixedValue={this.extractArray(this.state.problem.content, 3, 6)}\r\n                                selectedGrid={this.state.selectedGrid}\r\n                                conflicts={this.state.conflicts} />\r\n\r\n                            <Grid_9x9 row_offset={6} col_offset={6}\r\n                                handle_grid_1x1_click={this.handle_grid_1x1_click}\r\n                                value={this.extractArray(this.state.gridValues, 6, 6)}\r\n                                fixedValue={this.extractArray(this.state.problem.content, 6, 6)}\r\n                                selectedGrid={this.state.selectedGrid}\r\n                                conflicts={this.state.conflicts} />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {this.state.completeFlag ? (<Fireworks {...fxProps} />) : null}\r\n                {this.state.loading ? null : (<ScreenInputKeyBoard handleScreenKeyboardInput={this.handleScreenKeyboardInput} />)}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sudoku;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Sudoku from './containers/Sudoku'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Sudoku/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}